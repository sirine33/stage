nom
runApp()
nom= c( "Tunis","Ariana","Ben Arous","Manouba"," Nabeul","Zaghouan","Bizerte","Béja  ",
"Jendouba","Le Kef","Siliana","Sousse"," Monastir","Mahdia","Sfax","Kairouan"," Kasserine","Sidi Bouzid","Gabes","Mednine","Tataouine"," Gafsa","Tozeur","Kebili","Pas de Précision")
nom
runApp()
shiny::runApp()
nom= c( "Tunis","Ariana","Ben Arous","Manouba"," Nabeul","Zaghouan","Bizerte","Béja  ",
"Jendouba","Le Kef","Siliana","Sousse"," Monastir","Mahdia","Sfax","Kairouan"," Kasserine","Sidi Bouzid","Gabes","Mednine","Tataouine"," Gafsa","Tozeur","Kebili","Pas de Précision")
base1=read.spss("C:/Users/User1/OneDrive/Bureau/BASE DECES2020_46420.sav")
library(shiny)
library(shinydashboard)
library(foreign)
base=read.spss("C:/Users/User1/OneDrive/Bureau/AMAL13.sav")
DATAFINAL=data.frame(base)
##table(DATAFINAL$DATE_NAISSANCE_A)
##summary(DATAFINAL$DATE_NAISSANCE_A)
##i=which(DATAFINAL$DATE_NAISSANCE_A==9998)
##DATAFINAL$DATE_NAISSANCE_A[i]=NA
##age<- DATAFINAL$DATEA - DATAFINAL$DATE_NAISSANCE_A
##DATAFINAL$age=age
##summary(DATAFINAL$DATEA)##
View(DATAFINAL)
nom= c( "Tunis","Ariana","Ben Arous","Manouba"," Nabeul","Zaghouan","Bizerte","Béja  ",
"Jendouba","Le Kef","Siliana","Sousse"," Monastir","Mahdia","Sfax","Kairouan"," Kasserine","Sidi Bouzid","Gabes","Mednine","Tataouine"," Gafsa","Tozeur","Kebili","Pas de Précision")
nom= c( "Tunis","Ariana","Ben Arous","Manouba"," Nabeul","Zaghouan",
"Bizerte","Beja  ","Jendouba","Le Kef","Siliana","Sousse",
" Monastir","Mahdia","Sfax","Kairouan"," Kasserine","Sidi Bouzid",
"Gabes","Mednine","Tataouine"," Gafsa","Tozeur","Kebili",
"Pas de Pr cision")
base1=read.spss("C:/Users/User1/OneDrive/Bureau/BASE DECES2020_46420.sav")
DATAFINAL1=data.frame(base1)
dbHeader <- dashboardHeader(title = "My Dashboard",
tags$li(a(href = 'http://www.insp.rns.tn/',
img(src = 'insp.png',
title = "INSP", height = "30px"),
style = "padding-top:10px; padding-bottom:10px;"),
class = "dropdown"))
shinyUI(
dashboardPage(
dbHeader,
dashboardSidebar(
sidebarMenu(
menuItem("acceuil", tabName = "acceuil"),
menuItem("A propos SICD" , tabName = "about"),
menuItem("statistique national sur \r les causes de deces", tabName = "stat"),
menuItem("statistique national sur SICD", tabName = "taux")
)),
dashboardBody(
tabItems(
tabItem("about",
h4("Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor
incididunt ut labore et dolore magna aliqua. Interdum velit euismod in pellentesque
massa placerat. Proin sagittis nisl rhoncus mattis rhoncus urna neque. Augue interdum
velit euismod in. Odio aenean sed adipiscing diam. Senectus et netus et malesuada fames
ac turpis egestas. Metus vulputate eu scelerisque felis imperdiet proin fermentum leo.
Sapien eget mi proin sed. Viverra ipsum nunc aliquet bibendum enim facilisis gravida.
Convallis aenean et tortor at risus viverra adipiscing. Et sollicitudin ac orci
phasellus egestas tellus rutrum tellus. Aliquam id diam maecenas ultricies mi eget "),
h2("Rapport precis"),
box(
title = actionLink("titleId11", "rapport sur les causes de deces en Tunisie 2020"),
width = 12, solidHeader = TRUE, status = "primary"
),
box(
title = actionLink("titleId22", "rapport sur les causes de deces en Tunisie 2015 et 2017"),
width = 12, solidHeader = TRUE, status = "primary",
uiOutput("boxContentUI22")
),
box(
title = actionLink("titleId33", "rapport sur les causes de deces en Tunisie 2013"),
width = 12, solidHeader = TRUE, status = "primary",
uiOutput("boxContentUI33")
),
h2("Video"),
box(
title = actionLink("titleId44", "video 1"),
width = 12, solidHeader = TRUE, status = "primary",
uiOutput("boxContentUI44")
),
h2("Photos"),
fluidRow(
column(width = 4,img(src="insp.png",height="200px",width="200px")),
column(width = 4,img(src="sante.png",height="200px",width="200px")),
)
),
tabItem("stat",
fluidRow(
box(uiOutput('data'),status = "primary",
solidHeader = T,width = 3,
selectInput("data","data",
c("2020" =  "2020",
"2021" = "2021"),
selected = "2020")),
box(plotOutput("plot1"),width =12),
),
fluidRow(
box(uiOutput('data1'),status = "primary",
solidHeader = T,width = 3,
selectInput("data1","data1",
c("2020" =  "2020",
"2021" = "2021"),
selected = "2020")),
box(plotOutput("plot2"),width =12),
box(title="hhhhh",status = "primary",
solidHeader = T,width = 3,
selectInput("region","region",c("kk",nom))),
box(uiOutput('region'),status = "primary",
solidHeader = T,width = 3,
uiOutput("region"),
box(plotOutput("plot1"),width =12),
)
)
)))))
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
Sys.Date()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
base2=read.spss("base2020.sav")
DATAFINAL2=data.frame(base2)
runApp()
base2=read.spss("base2020.sav")
DATAFINAL2=data.frame(base2)
base2=read.spss("base2020.sav")
library(tidyverse)
library(shiny)
library(elo)
library(shiny)
library(shinydashboard)
library(foreign)
library(highcharter)
library(tidyverse)
base2=read.spss("base2020.sav")
DATAFINAL2=data.frame(base2)
runApp()
runApp()
tabItem("Acceuil",
h2("Bienvenue !")
h2("Bienvenue !")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
sexe_data=data.frame(addmargins(table(DATAFINAL2$SEXE)))
sexe_data
sexe_data=data.frame(addmargins(table(DATAFINAL2$SEXE,DATAFINAL2$classe_age)))
sexe_data
sexe_age$pourc=round(sexe_age$Freq/sexe_age$Freq[dim(sexe_age)[1]]*100,1)
sexe_age=data.frame(addmargins(table(DATAFINAL2$SEXE,DATAFINAL2$classe_age)))
sexe_age$pourc=round(sexe_age$Freq/sexe_age$Freq[dim(sexe_age)[1]]*100,1)
sexe_age$pourc
sexe_age
sexe_age[-dim(sexe_age)[1],] %>% hchart("pie",hcaes(x =Var1,y=Var2,z=pourc ),name="kkkkk")
sexe_age[-dim(sexe_age)[1],] %>% hchart("pie",hcaes(x =Var1,y=Var2,z=pourc ),name="kkkkk")
sexe_data=data.frame(addmargins(table(DATAFINAL$SEXE)))
sexe_data$pourc=round(sexe_data$Freq/sexe_data$Freq[dim(sexe_data)[1]]*100,1)
sexe_data[-dim(sexe_data)[1],] %>% hchart("pie",hcaes(x =Var1,y=pourc ),name="kkkkk")
sexe_age=data.frame(addmargins(table(DATAFINAL2$SEXE,DATAFINAL2$classe_age)))
sexe_age$pourc=round(sexe_age$Freq/sexe_age$Freq[dim(sexe_age)[1]]*100,1)
sexe_age[-dim(sexe_age)[1],] %>% hchart("pie",hcaes(x =Var1,y=Var2,z=pourc ),name="kkkkk")
gouv_data=data.frame(addmargins(table(DATAFINAL2$GOUVERNORAU)))
gouv_data
gouv_data$pourc=round(gouv_data$Freq/gouv_data$Freq[dim(gouv_data)[1]]*100,1)
gouv_data$pourc
gouv_data
amBarplot(x = "Var1", y = "pourc", data = gouv_data, depth = 15, labelRotation = -90)
library(rAmCharts)
amBarplot(x = "Var1", y = "pourc", data = gouv_data, depth = 15, labelRotation = -90)
view(DATAFINAL2)
cause_age=data.frame(addmargins(table(DATAFINAL2$Pathologie_Global,DATAFINAL2$classe_age)))
cause_age
age_data=data.frame(addmargins(table(DATAFINAL2$classe_age)))
age_data
amFunnel(data = age_data, inverse = TRUE)
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
gouv_data=data.frame(addmargins(table(DATAFINAL2$GOUVERNORAU)))
gouv_data$pourc=round(gouv_data$Freq/gouv_data$Freq[dim(gouv_data)[1]]*100,1)
amBarplot(x = "Var1", y = "Freq", data = gouv_data, depth = 15, labelRotation = -90)
gouv_data$pourc=round(gouv_data$Freq/gouv_data$Freq[dim(gouv_data)[1]]*100,1)
amBarplot(x = "Var1", y = "Freq", data = gouv_data, depth = 15, labelRotation = -90)
library(rAmCharts)
amBarplot(x = "Var1", y = "Freq", data = gouv_data, depth = 15, labelRotation = -90)
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
gouv_data=data.frame(addmargins(table(DATAFINAL2$GOUVERNORAU)))
gouv_data$pourc=round(gouv_data$Freq/gouv_data$Freq[dim(gouv_data)[1]]*100,1)
amBarplot(x = "Var1", y = "Freq", data = gouv_data, depth = 15, labelRotation = -90)
library(rAmCharts)
gouv_data=data.frame(addmargins(table(DATAFINAL2$GOUVERNORAU)))
gouv_data$pourc=round(gouv_data$Freq/gouv_data$Freq[dim(gouv_data)[1]]*100,1)
amBarplot(x = "Var1", y = "Freq", data = gouv_data, depth = 15, labelRotation = -90)
DATAFINAL2
view(DATAFINAL2)
summary(DATAFINAL2$Pathologie_Global)
summary(DATAFINAL2$Pathologie)
shiny::runApp()
runApp()
f = read.csv(file = file.choose())
x = c(1,2,3,4,5,6,7,8,9,10,11,12)
y = c(table(f$month))
y = c(table(f$month))
Data = data.frame(x,y)
plot(Data)
D=lm(y ~ x,data=Data)
abline(D,col="red")
b = c(13,14,15,16,17,18)
pred = data.frame(x=b)
c=as.integer(predict(D,newdata = pred))
plot(data.frame(c(x,b),c(y,c)))
abline(D,col="red")
lines(b, c, type = "l", lty = 1)
plot(Data)
D=lm(y ~ x,data=Data)
abline(D,col="red")
b = c(13,14,15,16,17,18)
pred = data.frame(x=b)
c=as.integer(predict(D,newdata = pred))
plot(data.frame(c(x,b),c(y,c)))
abline(D,col="red")
lines(b, c, type = "l", lty = 1)
s = list(Homme=1,Femme=2,NonPrecis=9)
l = list(diabète=1052, cérébrovasculaires=1069, Covid=1902, ischémiques=1067, externes=1103)
t = subset(f, Pathologie %in% l$diabète)
t
f
x = c(1,2,3,4,5,6,7,8,9,10,11,12)
y = c(table(t$month))
Data = data.frame(x,y)
Data
b = c(13,14,15,16,17,18)
D=lm(y ~ x,data=Data)
b = c(13,14,15,16,17,18)
pred = data.frame(x=b)
c = as.integer(predict(D,newdata = pred))
plot(data.frame(c(x,b),c(y,c)))
abline(D,col="red")
lines(b, c, type = "l", lty = 1)
runApp()
dim(DATAFINAL2)
dim(DATAFINAL)
view(DATAFINAL2)
view(DATAFINAL)
DATAFINAL$AgeAnalyse=AgeAnalyse
NOM_DEMANDEUR<-
DATAFINAL$NOM_DEMANDEUR=NOM_DEMANDEUR
NOM_DEMANDEUR<-1
DATAFINAL$NOM_DEMANDEUR=NOM_DEMANDEUR
DATAFINAL$NOM_DEMANDEUR
NOM_DEMANDEUR<-
DATAFINAL$NOM_DEMANDEUR=NOM_DEMANDEUR
AgeAnalyse<-NA
DATAFINAL$AgeAnalyse=AgeAnalyse
VAR00001<-NA
DATAFINAL$VAR00001=VAR00001
cancer<-NA
DATAFINAL$cancer=cancer
cancer_C<-NA
DATAFINAL$cancer_C=cancer_C
AVP<-NA
DATAFINAL$AVP=AVP
Pathologie<-NA
DATAFINAL$Pathologie=Pathologie
Pathologie_Global<-NA
DATAFINAL$Pathologie_Global=Pathologie_Global
Pathologie_Jev<-NA
DATAFINAL$Pathologie_Jev=Pathologie_Jev
Pathologie_Jev_Global<-NA
DATAFINAL$Pathologie_Jev_Global=Pathologie_Jev_Global
COLLECTIVITE_LOCALE<-NA
DATAFINAL$COLLECTIVITE_LOCALE=COLLECTIVITE_LOCALE
COLLECTIVITE_LOCALE_DECES<-NA
DATAFINAL$COLLECTIVITE_LOCALE_DECES=COLLECTIVITE_LOCALE_DECES
N_INSCRIPTION_ORDRE_DES_MEDECINS<-NA
DATAFINAL$N_INSCRIPTION_ORDRE_DES_MEDECINS=N_INSCRIPTION_ORDRE_DES_MEDECINS
SPETIALITE<-NA
DATAFINAL$SPETIALITE=SPETIALITE
NOM_DEMANDEUR<-NA
DATAFINAL$NOM_DEMANDEUR=NOM_DEMANDEUR
DATAFINAL$NOM_DEMANDEUR
DATAFINAL$NOM_DEMANDEUR
view(DATAFINAL)
dim(DATAFINAL)
dim(DATAFINAL2)
column(DATAFINAL2)
column(DATAFINAL2[1])
DATAFINAL$NOM_DEMANDEUR=NOM_DEMANDEUR
CIN_DEMANDEUR<-NA
DATAFINAL$CIN_DEMANDEUR=CIN_DEMANDEUR
VAR00002<-NA
DATAFINAL$VAR00002=VAR00002
CauseModif<-NA
DATAFINAL$CauseModif=CauseModif
DateOfBirth<-NA
DATAFINAL$DateOfBirth=DateOfBirth
DateOfDeath<-NA
DATAFINAL$DateOfDeath=DateOfDeath
Age_Days<-NA
DATAFINAL$Age_Days=Age_Days
Age_years<-NA
DATAFINAL$Age_years=Age_years
Sous_Chapitre<-NA
DATAFINAL$Sous_Chapitre=Sous_Chapitre
chapitre<-NA
DATAFINAL$chapitre=chapitre
PrimaryLast<-NA
DATAFINAL$PrimaryLast=PrimaryLast
##
DATAFINAL$PrimaryLast
View(DATAFINAL)
merge(DATAFINAL2, DATAFINAL, by ="DATA")
DATA<- rbind(DATAFINAL,DATAFINAL2)
merge(DATAFINAL2,DATAFINAL, by="names")
merge(DATAFINAL2,DATAFINAL, by=names)
i=which(DATAFINAL$DATE_NAISSANCE_A==9998)
DATAFINAL$DATE_NAISSANCE_A[i]=NA
age<- DATAFINAL$DATEA - DATAFINAL$DATE_NAISSANCE_A
fix(DATAFINAL)
age<- DATAFINAL$DATEA - DATAFINAL$DATE_NAISSANCE_A
DATAFINAL$age=age
classe_age=cut(DATAFINAL$age,c(0,1,4,14,44,64,74,150),include.lowest = TRUE,labels=c("<1","1-4","5-14","15-44","45-64","65-74",">=75"))
DATAFINAL$classe_age=classe_age
shiny::runApp()
i=which(DATAFINAL$DATE_NAISSANCE_A==9998)
DATAFINAL$DATE_NAISSANCE_A[i]=NA
age<- DATAFINAL$DATEA - DATAFINAL$DATE_NAISSANCE_A
DATAFINAL$age=age
DATAFINAL2$DATE_NAISSANCE_A[i]=NA
age<- DATAFINAL2$DATEA - DATAFINAL2$DATE_NAISSANCE_A
DATAFINAL2$age=age
fix(DATAFINAL2)
age<- DATAFINAL2$DATEA - DATAFINAL2$DATE_NAISSANCE_A
DATAFINAL2$age=age
DATAFINAL2$age
classe_age=cut(DATAFINAL$age,c(0,1,4,14,44,64,74,150),include.lowest = TRUE,labels=c("<1","1-4","5-14","15-44","45-64","65-74",">=75"))
DATAFINAL$classe_age=classe_age
AgeAnalyse<-NA
DATAFINAL$AgeAnalyse=AgeAnalyse
VAR00001<-NA
DATAFINAL$VAR00001=VAR00001
cancer<-NA
DATAFINAL$cancer=cancer
cancer_C<-NA
DATAFINAL$cancer_C=cancer_C
AVP<-NA
DATAFINAL$AVP=AVP
Pathologie<-NA
DATAFINAL$Pathologie=Pathologie
Pathologie_Global<-NA
DATAFINAL$Pathologie_Global=Pathologie_Global
Pathologie_Jev<-NA
DATAFINAL$Pathologie_Jev=Pathologie_Jev
Pathologie_Jev_Global<-NA
DATAFINAL$Pathologie_Jev_Global=Pathologie_Jev_Global
COLLECTIVITE_LOCALE<-NA
DATAFINAL$COLLECTIVITE_LOCALE=COLLECTIVITE_LOCALE
COLLECTIVITE_LOCALE_DECES<-NA
DATAFINAL$COLLECTIVITE_LOCALE_DECES=COLLECTIVITE_LOCALE_DECES
N_INSCRIPTION_ORDRE_DES_MEDECINS<-NA
DATAFINAL$N_INSCRIPTION_ORDRE_DES_MEDECINS=N_INSCRIPTION_ORDRE_DES_MEDECINS
SPETIALITE<-NA
DATAFINAL$SPETIALITE=SPETIALITE
NOM_DEMANDEUR<-NA
DATAFINAL$NOM_DEMANDEUR=NOM_DEMANDEUR
CIN_DEMANDEUR<-NA
DATAFINAL$CIN_DEMANDEUR=CIN_DEMANDEUR
VAR00002<-NA
DATAFINAL$VAR00002=VAR00002
CauseModif<-NA
DATAFINAL$CauseModif=CauseModif
DateOfBirth<-NA
DATAFINAL$DateOfBirth=DateOfBirth
DateOfDeath<-NA
DATAFINAL$DateOfDeath=DateOfDeath
Age_Days<-NA
DATAFINAL$Age_Days=Age_Days
Age_years<-NA
DATAFINAL$Age_years=Age_years
Sous_Chapitre<-NA
DATAFINAL$Sous_Chapitre=Sous_Chapitre
chapitre<-NA
DATAFINAL$chapitre=chapitre
PrimaryLast<-NA
DATAFINAL$PrimaryLast=PrimaryLast
DATAFINAL$CONFORME_AU_MODELE<- NULL
DATAFINAL<-DATAFINAL[,c(1,68,18,92,53,69,70,71,72,12,73,74,75,76,2,3,4,5,77,6,7,8,9,10,11,13,14,15,16,78,17,19,20,21,22,23,24,25,26,
27,28,29,30,31,79,32,80,33,34,67,81,36,38,40,42,44,46,48,49,50,51,52,82,35,37,39,41,43,45,47,
83,54,55,56,57,58,59,60,61,62,63,64,65,66,84,85,86,87,88,89,90,91)]
DATA<- rbind(DATAFINAL2,DATAFINAL)
DATA
runApp()
sexe_data=data.frame(addmargins(table(DATAFINAL$SEXE)))
sexe_data
sexe_data$pourc=round(sexe_data$Freq/sexe_data$Freq[dim(sexe_data)[1]]*100,1)
sexe_data[-dim(sexe_data)[1],] %>% hchart("pie",hcaes(x =Var1,y=pourc ),name="pourcentage%")
runApp()
runApp()
table(DATA$SEXE,DATA$GOUVERNORAU)
data.frame(addmargins(table(DATA$SEXE,DATA$GOUVERNORAU)))
gouv_data=data.frame(addmargins(table(DATAFINAL2$GOUVERNORAU)))
gouv_data$pourc=round(gouv_data$Freq/gouv_data$Freq[dim(gouv_data)[1]]*100,1)
amBarplot(x = "Var1", y = "Freq", data = gouv_data, depth = 15, labelRotation = -90)
library(rAmCharts)
gouv_data=data.frame(addmargins(table(DATAFINAL2$GOUVERNORAU)))
gouv_data$pourc=round(gouv_data$Freq/gouv_data$Freq[dim(gouv_data)[1]]*100,1)
amBarplot(x = "Var1", y = "Freq", data = gouv_data, depth = 15, labelRotation = -90)
gouv_data=data.frame(addmargins(table(DATA$classe_age)))
gouv_data$pourc=round(gouv_data$Freq/gouv_data$Freq[dim(gouv_data)[1]]*100,1)
amBarplot(x = "Var1", y = "Freq", data = gouv_data, depth = 15, labelRotation = -90)
DATAFINAL2$classe_age<-NULL
classe_age=cut(DATAFINAL2$age,c(0,1,4,14,44,64,74,150),include.lowest = TRUE,labels=c("<1","1-4","5-14","15-44","45-64","65-74",">=75"))
DATAFINAL2$classe_age=classe_age
view(DATAFINAL2)
DATAFINAL2$classe_age=classe_age
View(DATAFINAL2)
View(DATAFINAL)
DATAFINAL<-DATAFINAL[,c(1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,
41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,
72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93)]
DATAFINAL<-DATAFINAL[,c(1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,
41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,
72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,4)]
DATA<- rbind(DATAFINAL2,DATAFINAL)
DATA<- rbind(DATAFINAL2,DATAFINAL)
view(DATA)
gouv_data=data.frame(addmargins(table(DATA$classe_age)))
gouv_data$pourc=round(gouv_data$Freq/gouv_data$Freq[dim(gouv_data)[1]]*100,1)
amBarplot(x = "Var1", y = "Freq", data = gouv_data, depth = 15, labelRotation = -90)
runApp()
runApp()
renderRamchart
AmChartsOutput
runApp()
runApp()
runApp()
runApp()
output$plot2<-renderAmCharts
amChartsOutput
output$plot2<-renderAmCharts
output$plot2
Output$plot2
output$plot2<-renderAmCharts({
gouv_data=data.frame(addmargins(table(DATA$classe_age)))
gouv_data$pourc=round(gouv_data$Freq/gouv_data$Freq[dim(gouv_data)[1]]*100,1)
amBarplot(x = "Var1", y = "Freq", data = gouv_data, depth = 15, labelRotation = -90)
})
runApp()
sexe_data=data.frame(addmargins(table(DATA$SEXE)))
sexe_data
runApp()
sexe_data=data.frame(addmargins(table(DATA$SEXE)))
amPie(data = sexe_data)
amPie(data = sexe_data)
runApp()
