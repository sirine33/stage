sexe_age[-dim(sexe_age)[1],] %>% hchart("pie",hcaes(x =Var1,y=Var2,z=pourc ),name="kkkkk")
sexe_age[-dim(sexe_age)[1],] %>% hchart("pie",hcaes(x =Var1,y=Var2,z=pourc ),name="kkkkk")
sexe_data=data.frame(addmargins(table(DATAFINAL$SEXE)))
sexe_data$pourc=round(sexe_data$Freq/sexe_data$Freq[dim(sexe_data)[1]]*100,1)
sexe_data[-dim(sexe_data)[1],] %>% hchart("pie",hcaes(x =Var1,y=pourc ),name="kkkkk")
sexe_age=data.frame(addmargins(table(DATAFINAL2$SEXE,DATAFINAL2$classe_age)))
sexe_age$pourc=round(sexe_age$Freq/sexe_age$Freq[dim(sexe_age)[1]]*100,1)
sexe_age[-dim(sexe_age)[1],] %>% hchart("pie",hcaes(x =Var1,y=Var2,z=pourc ),name="kkkkk")
gouv_data=data.frame(addmargins(table(DATAFINAL2$GOUVERNORAU)))
gouv_data
gouv_data$pourc=round(gouv_data$Freq/gouv_data$Freq[dim(gouv_data)[1]]*100,1)
gouv_data$pourc
gouv_data
amBarplot(x = "Var1", y = "pourc", data = gouv_data, depth = 15, labelRotation = -90)
library(rAmCharts)
amBarplot(x = "Var1", y = "pourc", data = gouv_data, depth = 15, labelRotation = -90)
view(DATAFINAL2)
cause_age=data.frame(addmargins(table(DATAFINAL2$Pathologie_Global,DATAFINAL2$classe_age)))
cause_age
age_data=data.frame(addmargins(table(DATAFINAL2$classe_age)))
age_data
amFunnel(data = age_data, inverse = TRUE)
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
gouv_data=data.frame(addmargins(table(DATAFINAL2$GOUVERNORAU)))
gouv_data$pourc=round(gouv_data$Freq/gouv_data$Freq[dim(gouv_data)[1]]*100,1)
amBarplot(x = "Var1", y = "Freq", data = gouv_data, depth = 15, labelRotation = -90)
gouv_data$pourc=round(gouv_data$Freq/gouv_data$Freq[dim(gouv_data)[1]]*100,1)
amBarplot(x = "Var1", y = "Freq", data = gouv_data, depth = 15, labelRotation = -90)
library(rAmCharts)
amBarplot(x = "Var1", y = "Freq", data = gouv_data, depth = 15, labelRotation = -90)
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
gouv_data=data.frame(addmargins(table(DATAFINAL2$GOUVERNORAU)))
gouv_data$pourc=round(gouv_data$Freq/gouv_data$Freq[dim(gouv_data)[1]]*100,1)
amBarplot(x = "Var1", y = "Freq", data = gouv_data, depth = 15, labelRotation = -90)
library(rAmCharts)
gouv_data=data.frame(addmargins(table(DATAFINAL2$GOUVERNORAU)))
gouv_data$pourc=round(gouv_data$Freq/gouv_data$Freq[dim(gouv_data)[1]]*100,1)
amBarplot(x = "Var1", y = "Freq", data = gouv_data, depth = 15, labelRotation = -90)
DATAFINAL2
view(DATAFINAL2)
summary(DATAFINAL2$Pathologie_Global)
summary(DATAFINAL2$Pathologie)
shiny::runApp()
runApp()
f = read.csv(file = file.choose())
x = c(1,2,3,4,5,6,7,8,9,10,11,12)
y = c(table(f$month))
y = c(table(f$month))
Data = data.frame(x,y)
plot(Data)
D=lm(y ~ x,data=Data)
abline(D,col="red")
b = c(13,14,15,16,17,18)
pred = data.frame(x=b)
c=as.integer(predict(D,newdata = pred))
plot(data.frame(c(x,b),c(y,c)))
abline(D,col="red")
lines(b, c, type = "l", lty = 1)
plot(Data)
D=lm(y ~ x,data=Data)
abline(D,col="red")
b = c(13,14,15,16,17,18)
pred = data.frame(x=b)
c=as.integer(predict(D,newdata = pred))
plot(data.frame(c(x,b),c(y,c)))
abline(D,col="red")
lines(b, c, type = "l", lty = 1)
s = list(Homme=1,Femme=2,NonPrecis=9)
l = list(diabète=1052, cérébrovasculaires=1069, Covid=1902, ischémiques=1067, externes=1103)
t = subset(f, Pathologie %in% l$diabète)
t
f
x = c(1,2,3,4,5,6,7,8,9,10,11,12)
y = c(table(t$month))
Data = data.frame(x,y)
Data
b = c(13,14,15,16,17,18)
D=lm(y ~ x,data=Data)
b = c(13,14,15,16,17,18)
pred = data.frame(x=b)
c = as.integer(predict(D,newdata = pred))
plot(data.frame(c(x,b),c(y,c)))
abline(D,col="red")
lines(b, c, type = "l", lty = 1)
runApp()
dim(DATAFINAL2)
dim(DATAFINAL)
view(DATAFINAL2)
view(DATAFINAL)
DATAFINAL$AgeAnalyse=AgeAnalyse
NOM_DEMANDEUR<-
DATAFINAL$NOM_DEMANDEUR=NOM_DEMANDEUR
NOM_DEMANDEUR<-1
DATAFINAL$NOM_DEMANDEUR=NOM_DEMANDEUR
DATAFINAL$NOM_DEMANDEUR
NOM_DEMANDEUR<-
DATAFINAL$NOM_DEMANDEUR=NOM_DEMANDEUR
AgeAnalyse<-NA
DATAFINAL$AgeAnalyse=AgeAnalyse
VAR00001<-NA
DATAFINAL$VAR00001=VAR00001
cancer<-NA
DATAFINAL$cancer=cancer
cancer_C<-NA
DATAFINAL$cancer_C=cancer_C
AVP<-NA
DATAFINAL$AVP=AVP
Pathologie<-NA
DATAFINAL$Pathologie=Pathologie
Pathologie_Global<-NA
DATAFINAL$Pathologie_Global=Pathologie_Global
Pathologie_Jev<-NA
DATAFINAL$Pathologie_Jev=Pathologie_Jev
Pathologie_Jev_Global<-NA
DATAFINAL$Pathologie_Jev_Global=Pathologie_Jev_Global
COLLECTIVITE_LOCALE<-NA
DATAFINAL$COLLECTIVITE_LOCALE=COLLECTIVITE_LOCALE
COLLECTIVITE_LOCALE_DECES<-NA
DATAFINAL$COLLECTIVITE_LOCALE_DECES=COLLECTIVITE_LOCALE_DECES
N_INSCRIPTION_ORDRE_DES_MEDECINS<-NA
DATAFINAL$N_INSCRIPTION_ORDRE_DES_MEDECINS=N_INSCRIPTION_ORDRE_DES_MEDECINS
SPETIALITE<-NA
DATAFINAL$SPETIALITE=SPETIALITE
NOM_DEMANDEUR<-NA
DATAFINAL$NOM_DEMANDEUR=NOM_DEMANDEUR
DATAFINAL$NOM_DEMANDEUR
DATAFINAL$NOM_DEMANDEUR
view(DATAFINAL)
dim(DATAFINAL)
dim(DATAFINAL2)
column(DATAFINAL2)
column(DATAFINAL2[1])
DATAFINAL$NOM_DEMANDEUR=NOM_DEMANDEUR
CIN_DEMANDEUR<-NA
DATAFINAL$CIN_DEMANDEUR=CIN_DEMANDEUR
VAR00002<-NA
DATAFINAL$VAR00002=VAR00002
CauseModif<-NA
DATAFINAL$CauseModif=CauseModif
DateOfBirth<-NA
DATAFINAL$DateOfBirth=DateOfBirth
DateOfDeath<-NA
DATAFINAL$DateOfDeath=DateOfDeath
Age_Days<-NA
DATAFINAL$Age_Days=Age_Days
Age_years<-NA
DATAFINAL$Age_years=Age_years
Sous_Chapitre<-NA
DATAFINAL$Sous_Chapitre=Sous_Chapitre
chapitre<-NA
DATAFINAL$chapitre=chapitre
PrimaryLast<-NA
DATAFINAL$PrimaryLast=PrimaryLast
##
DATAFINAL$PrimaryLast
View(DATAFINAL)
merge(DATAFINAL2, DATAFINAL, by ="DATA")
DATA<- rbind(DATAFINAL,DATAFINAL2)
merge(DATAFINAL2,DATAFINAL, by="names")
merge(DATAFINAL2,DATAFINAL, by=names)
i=which(DATAFINAL$DATE_NAISSANCE_A==9998)
DATAFINAL$DATE_NAISSANCE_A[i]=NA
age<- DATAFINAL$DATEA - DATAFINAL$DATE_NAISSANCE_A
fix(DATAFINAL)
age<- DATAFINAL$DATEA - DATAFINAL$DATE_NAISSANCE_A
DATAFINAL$age=age
classe_age=cut(DATAFINAL$age,c(0,1,4,14,44,64,74,150),include.lowest = TRUE,labels=c("<1","1-4","5-14","15-44","45-64","65-74",">=75"))
DATAFINAL$classe_age=classe_age
shiny::runApp()
i=which(DATAFINAL$DATE_NAISSANCE_A==9998)
DATAFINAL$DATE_NAISSANCE_A[i]=NA
age<- DATAFINAL$DATEA - DATAFINAL$DATE_NAISSANCE_A
DATAFINAL$age=age
DATAFINAL2$DATE_NAISSANCE_A[i]=NA
age<- DATAFINAL2$DATEA - DATAFINAL2$DATE_NAISSANCE_A
DATAFINAL2$age=age
fix(DATAFINAL2)
age<- DATAFINAL2$DATEA - DATAFINAL2$DATE_NAISSANCE_A
DATAFINAL2$age=age
DATAFINAL2$age
classe_age=cut(DATAFINAL$age,c(0,1,4,14,44,64,74,150),include.lowest = TRUE,labels=c("<1","1-4","5-14","15-44","45-64","65-74",">=75"))
DATAFINAL$classe_age=classe_age
AgeAnalyse<-NA
DATAFINAL$AgeAnalyse=AgeAnalyse
VAR00001<-NA
DATAFINAL$VAR00001=VAR00001
cancer<-NA
DATAFINAL$cancer=cancer
cancer_C<-NA
DATAFINAL$cancer_C=cancer_C
AVP<-NA
DATAFINAL$AVP=AVP
Pathologie<-NA
DATAFINAL$Pathologie=Pathologie
Pathologie_Global<-NA
DATAFINAL$Pathologie_Global=Pathologie_Global
Pathologie_Jev<-NA
DATAFINAL$Pathologie_Jev=Pathologie_Jev
Pathologie_Jev_Global<-NA
DATAFINAL$Pathologie_Jev_Global=Pathologie_Jev_Global
COLLECTIVITE_LOCALE<-NA
DATAFINAL$COLLECTIVITE_LOCALE=COLLECTIVITE_LOCALE
COLLECTIVITE_LOCALE_DECES<-NA
DATAFINAL$COLLECTIVITE_LOCALE_DECES=COLLECTIVITE_LOCALE_DECES
N_INSCRIPTION_ORDRE_DES_MEDECINS<-NA
DATAFINAL$N_INSCRIPTION_ORDRE_DES_MEDECINS=N_INSCRIPTION_ORDRE_DES_MEDECINS
SPETIALITE<-NA
DATAFINAL$SPETIALITE=SPETIALITE
NOM_DEMANDEUR<-NA
DATAFINAL$NOM_DEMANDEUR=NOM_DEMANDEUR
CIN_DEMANDEUR<-NA
DATAFINAL$CIN_DEMANDEUR=CIN_DEMANDEUR
VAR00002<-NA
DATAFINAL$VAR00002=VAR00002
CauseModif<-NA
DATAFINAL$CauseModif=CauseModif
DateOfBirth<-NA
DATAFINAL$DateOfBirth=DateOfBirth
DateOfDeath<-NA
DATAFINAL$DateOfDeath=DateOfDeath
Age_Days<-NA
DATAFINAL$Age_Days=Age_Days
Age_years<-NA
DATAFINAL$Age_years=Age_years
Sous_Chapitre<-NA
DATAFINAL$Sous_Chapitre=Sous_Chapitre
chapitre<-NA
DATAFINAL$chapitre=chapitre
PrimaryLast<-NA
DATAFINAL$PrimaryLast=PrimaryLast
DATAFINAL$CONFORME_AU_MODELE<- NULL
DATAFINAL<-DATAFINAL[,c(1,68,18,92,53,69,70,71,72,12,73,74,75,76,2,3,4,5,77,6,7,8,9,10,11,13,14,15,16,78,17,19,20,21,22,23,24,25,26,
27,28,29,30,31,79,32,80,33,34,67,81,36,38,40,42,44,46,48,49,50,51,52,82,35,37,39,41,43,45,47,
83,54,55,56,57,58,59,60,61,62,63,64,65,66,84,85,86,87,88,89,90,91)]
DATA<- rbind(DATAFINAL2,DATAFINAL)
DATA
runApp()
sexe_data=data.frame(addmargins(table(DATAFINAL$SEXE)))
sexe_data
sexe_data$pourc=round(sexe_data$Freq/sexe_data$Freq[dim(sexe_data)[1]]*100,1)
sexe_data[-dim(sexe_data)[1],] %>% hchart("pie",hcaes(x =Var1,y=pourc ),name="pourcentage%")
runApp()
runApp()
table(DATA$SEXE,DATA$GOUVERNORAU)
data.frame(addmargins(table(DATA$SEXE,DATA$GOUVERNORAU)))
gouv_data=data.frame(addmargins(table(DATAFINAL2$GOUVERNORAU)))
gouv_data$pourc=round(gouv_data$Freq/gouv_data$Freq[dim(gouv_data)[1]]*100,1)
amBarplot(x = "Var1", y = "Freq", data = gouv_data, depth = 15, labelRotation = -90)
library(rAmCharts)
gouv_data=data.frame(addmargins(table(DATAFINAL2$GOUVERNORAU)))
gouv_data$pourc=round(gouv_data$Freq/gouv_data$Freq[dim(gouv_data)[1]]*100,1)
amBarplot(x = "Var1", y = "Freq", data = gouv_data, depth = 15, labelRotation = -90)
gouv_data=data.frame(addmargins(table(DATA$classe_age)))
gouv_data$pourc=round(gouv_data$Freq/gouv_data$Freq[dim(gouv_data)[1]]*100,1)
amBarplot(x = "Var1", y = "Freq", data = gouv_data, depth = 15, labelRotation = -90)
DATAFINAL2$classe_age<-NULL
classe_age=cut(DATAFINAL2$age,c(0,1,4,14,44,64,74,150),include.lowest = TRUE,labels=c("<1","1-4","5-14","15-44","45-64","65-74",">=75"))
DATAFINAL2$classe_age=classe_age
view(DATAFINAL2)
DATAFINAL2$classe_age=classe_age
View(DATAFINAL2)
View(DATAFINAL)
DATAFINAL<-DATAFINAL[,c(1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,
41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,
72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93)]
DATAFINAL<-DATAFINAL[,c(1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,
41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,
72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,4)]
DATA<- rbind(DATAFINAL2,DATAFINAL)
DATA<- rbind(DATAFINAL2,DATAFINAL)
view(DATA)
gouv_data=data.frame(addmargins(table(DATA$classe_age)))
gouv_data$pourc=round(gouv_data$Freq/gouv_data$Freq[dim(gouv_data)[1]]*100,1)
amBarplot(x = "Var1", y = "Freq", data = gouv_data, depth = 15, labelRotation = -90)
runApp()
runApp()
renderRamchart
AmChartsOutput
runApp()
runApp()
runApp()
runApp()
output$plot2<-renderAmCharts
amChartsOutput
output$plot2<-renderAmCharts
output$plot2
Output$plot2
output$plot2<-renderAmCharts({
gouv_data=data.frame(addmargins(table(DATA$classe_age)))
gouv_data$pourc=round(gouv_data$Freq/gouv_data$Freq[dim(gouv_data)[1]]*100,1)
amBarplot(x = "Var1", y = "Freq", data = gouv_data, depth = 15, labelRotation = -90)
})
runApp()
sexe_data=data.frame(addmargins(table(DATA$SEXE)))
sexe_data
runApp()
sexe_data=data.frame(addmargins(table(DATA$SEXE)))
amPie(data = sexe_data)
amPie(data = sexe_data)
runApp()
shiny::runApp()
DATA
DATA$SEXE
table(DATA$SEXE
sexe_data=data.frame(addmargins(table(DATA$SEXE)))
data.frame(addmargins(table(DATA$SEXE)))
data.frame(addmargins(table(DATAFINAL2$SEXE)))
runApp()
runApp()
gouv_data=data.frame(addmargins(table(DATA$classe_age)))
gouv_data$pourc=round(gouv_data$Freq/gouv_data$Freq[dim(gouv_data)[1]]*100,1)
amBarplot(x = "Var1", y = "Freq", data = gouv_data, depth = 15, labelRotation = -90)
library(rAmCharts)
gouv_data=data.frame(addmargins(table(DATA$classe_age)))
gouv_data$pourc=round(gouv_data$Freq/gouv_data$Freq[dim(gouv_data)[1]]*100,1)
amBarplot(x = "Var1", y = "Freq", data = gouv_data, depth = 15, labelRotation = -90)
runApp()
outfile<-tempfile(fileext = 'capture.png')
png(outfile,width = 400,height = 400)
outfile
runApp()
runApp()
runApp()
runApp()
runApp()
library(foreign)
library(haven)
write.spss(DATAFINAL,"DATAFINAL.sav")
library(foreign)
library(haven)
write.sav(DATAFINAL, "DATAFINAL.sav")
write.csv(DATA,"DATA.csv",sep=";")
DATA=read.csv("DATA.csv")
View(DATA)
shiny::runApp()
runApp()
runApp()
runApp()
sexe_data=data.frame(addmargins(table(DATA$SEXE)))
res=data.frame(addmargins(table(DATA$SEXE)))
res$pourc=res$Freq/res$Freq(dim(res)[1])
res$pourc=res$Freq/res$Freq[dim(res)[1]]
RES
res
res$pourc=round(res$Freq/res$Freq[dim(res)[1]]*100,1)
res=data.frame(addmargins(table(DATA$SEXE)))
res$pourc=round(res$Freq/res$Freq[dim(res)[1]]*100,1)
names(res)=c("SEX","nombre","Pourcentage")
datatable(res)
runApp()
runApp()
library(leaflet)
install.packages("leaflet")
library(leaflet)
libPath()
libPaths
libPaths()
.libPaths()
.libPaths()
.libPaths("C:/Rfolder")
.libPaths()
library(elo)
library(shiny)
library(shinydashboard)
library(foreign)
library(highcharter)
library(tidyverse)
library(DT)
library(plotly)
library(rAmCharts)
library(data.table)
library(lealefl)
.libPaths()
.libPaths()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
res=data.frame(table(DATA$classe_age,DATA$SEXE))
table(DATA$classe_age,DATA$SEXE)
addmargins(table(DATA$classe_age,DATA$SEXE))
addmargins(table(DATA$classe_age,DATA$SEXE),1)
table(DATA$classe_age,DATA$SEXE)
data.frame(table(DATA$classe_age,DATA$SEXE))
runApp()
res=data.frame(table(DATA$DATEM,DATA$SEXE))
res
res=data.frame(table(DATA$DATEM,DATA$SEXE))
res
runApp()
summary(DATA$age)
hc <- hcboxplot(
x =DATA$DATEM,
var = DATA$age,
outliers = FALSE,
color = "#2980b9"
) %>%
hc_chart(type = "column")
hc <- hcboxplot(
var =DATA$DATEM,
x = DATA$age,
outliers = FALSE,
color = "#2980b9"
) %>%
hc_chart(type = "column")
hc
runApp()
runApp()
runApp()
runApp()
data.frame(addmargins(table(data_finall()$SEXE)))
data_finall()$SEXE
shiny::runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
output$download_rapport<-downloadHandler(
filename="rapport deces.html",
content = function(file){
src<-normalizePath('Rapport.Rmd')
owd<-setwd(tempdir())
on.exit(setwd(owd))
file.copy(src,'Rapport.Rmd',overwrite = TRUE)
out<-render("Rapport.Rmd","html_document")
file.rename(out,file)
})
output$download_rapport<-downloadHandler(
filename="rapport deces.html",
content = function(file){
src<-normalizePath('Rapport.Rmd')
owd<-setwd(tempdir())
on.exit(setwd(owd))
file.copy(src,'Rapport.Rmd',overwrite = TRUE)
out<-render("Rapport.Rmd","html_document")
file.rename(out,file)
})
library(rmarkdown)
library(openxlsx)
library(elo)
library(shiny)
library(shinydashboard)
library(foreign)
library(highcharter)
library(tidyverse)
library(DT)
library(rAmCharts)
library(data.table)
library(leaflet)
library(fontawesome)
library(raster)
library(readxl)
library(rAmCharts)
output$download_rapport<-downloadHandler
shiny::runApp()
output$download_rapport
output$download_rapport<-downloadHandler(
filename="rapport deces.html",
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
